
###
## TRAIN A MODEL
#
#
# File Structure - *filenames matter* & 'your_db' should always be the same
#
# your_db/
# 	etc/
# 		your_db.dic - Phonetic dictionary
# 		your_db.phone - Phoneset file
# 		your_db.lm - Language model
# 		your_db.filler - List of fillers
# 		your_db_train.fileids - List of files for training
# 		your_db_train.transcription - Transcription for training
# 		your_db_test.fileids - List of files for testing
# 		your_db_test.transcription - Transcription for testing
# 	wav/
# 		speaker_1/
# 			file_1.wav - Recording of speech utterance
# 		speaker_2/
# 			file_2.wav

# File contents:
#
#   .fileids (paths to WAV files w/o extensions)
# 	speaker_1/file_1
# 	speaker_2/file_2
# 	      ...
#	      
#   .transcription (transcription + file id w/o path or extension)
#   	 <s> hello world </s> (file_1)
# 	 <s> foo bar </s> (file_2)
# 	            ...
#
#   .wav (Recording files)
#        WAV, (16 kHz, 16 bit, mono - desktop), (8kHz, 16bit, mono - telephone)
#        **Audio format mismatch is the most common training problem**
#
#   .dict (use alphanumeric-only, case-insensitive)
# 	HELLO HH AH L OW
# 	WORLD W AO R L D
# 	      ...
#
#   .phone (one phone per line + SIL for silence)
#   	 SIL
#   	 A
# 	 O
# 	 I
# 	 ...
#
#   .lm (or .lm.bin, should be in ARPA format)
#
#   .filler (filler noise dict)
#   	  <s> SIL
# 	  </s> SIL
# 	  <sil> SIL
# 	  +um+ ++um++
# 	  +laugh+ ++laugh++	
# 	  ...

sphinxtrain -t model_dir setup

## EXAMPLE OUTPUT

# josh@yoga:~/Desktop/kyrgyz$ la
# etc  wav
#
# josh@yoga:~/Desktop/kyrgyz$ la etc/
# kyrgyz.dic     kyrgyz.phone               kyrgyz_train.fileids
# kyrgyz.filler  kyrgyz_test.fileids        kyrgyz_train.transcription
# kyrgyz.lm      kyrgyz_test.transcription
#
# josh@yoga:~/Desktop/kyrgyz$ sphinxtrain -t kyrgyz setup
# Sphinxtrain path: /usr/local/lib/sphinxtrain
# Sphinxtrain binaries path: /usr/local/libexec/sphinxtrain
# Setting up the database kyrgyz
#
# josh@yoga:~/Desktop/kyrgyz$ la etc/
# feat.params    kyrgyz.phone               kyrgyz_train.transcription
# kyrgyz.dic     kyrgyz_test.fileids        sphinx_train.cfg
# kyrgyz.filler  kyrgyz_test.transcription
# kyrgyz.lm      kyrgyz_train.fileids


sphinxtrain run

#
##
###



###
##  ADAPT A MODEL
#

sphinx_fe -argfile kazakh_org/feat.params -samprate 16000 -c atai_plus_tokmok_1.fileids -di . -do . -ei wav -eo mfc -mswav yes

./bw  -hmmdir kazakh_org  -moddeffn kazakh_org/mdef  -ts2cbfn .cont.  -feat 1s_c_d_dd -cmn current  -agc none  -dictfn kyrgyz.dic  -ctlfn atai_plus_tokmok_1.fileids  -lsnfn atai_plus_tokmok_1.transcription  -accumdir .

./mllr_solve     -meanfn kazakh_org/means     -varfn kazakh_org/variances     -outmllrfn mllr_matrix -accumdir .

cp -a kazakh_org kyrgyz_adapt

./map_adapt     -moddeffn kazakh_org/mdef     -ts2cbfn .cont.     -meanfn kazakh_org/means     -varfn kazakh_org/variances     -mixwfn kazakh_org/mixture_weights     -tmatfn kazakh_org/transition_matrices     -accumdir .     -mapmeanfn kazakh_atai_plus_tokmok_1/means     -mapvarfn kazakh_atai_plus_tokmok_1/variances     -mapmixwfn kazakh_atai_plus_tokmok_1/mixture_weights     -maptmatfn kazakh_atai_plus_tokmok_1/transition_matrices

./mk_s2sendump     -pocketsphinx yes     -moddeffn kazakh_atai_plus_tokmok_1/mdef     -mixwfn kazakh_atai_plus_tokmok_1/mixture_weights     -sendumpfn kazakh_atai_plus_tokmok_1/sendump

#
##
###



###
## TEST A MODEL
#

pocketsphinx_continuous -hmm kyrgyz_adapt -lm kyrgyz.lm.DMP -dict kyrgyz.dic -inmic yes

pocketsphinx_batch  -adcin yes  -cepdir test_WAVs  -cepext .wav  -ctl test.fileids  -lm kyrgyz_bigram_turing_lm.DMP -dict kyrgyz.dic -hmm kazakh_atai_plus_tokmok_1  -hyp kazakh_atai_plus_tokmok_1_turing.hyp

## once you have run batch decoding on some files and generated a .hyp
## file, do this command to see how good your hypotheses were
perl word_align.pl test.transcription kyrgyz_only.hyp

#
##
###


